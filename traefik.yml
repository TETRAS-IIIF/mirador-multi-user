version: "3"

services:
  frontend:
    networks:
      - default
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.${NAME}.rule=Host(`${HOST}`)"
      - "traefik.http.routers.${NAME}.tls.certresolver=myresolver"
      - "traefik.http.routers.${NAME}.entrypoints=web,websecure"
      - "traefik.http.middlewares.hardening-${NAME}.headers.sslredirect=true"
      - "traefik.http.middlewares.hardening-${NAME}.headers.forceSTSHeader=true"
      - "traefik.http.middlewares.hardening-${NAME}.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.hardening-${NAME}.headers.stsSeconds=15552000"
      - "traefik.http.middlewares.hardening-${NAME}.headers.stsPreload=true"
      - "traefik.http.middlewares.hardening-${NAME}.headers.referrerPolicy=no-referrer"

  backend:
    networks:
      - default
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.${BACKEND_NAME}.rule=Host(`${BACKEND_HOST}`)"
      - "traefik.http.routers.${BACKEND_NAME}.tls.certresolver=myresolver"
      - "traefik.http.routers.${BACKEND_NAME}.entrypoints=web,websecure"
      - "traefik.http.routers.${BACKEND_NAME}.middlewares=hardening@docker"

  caddy:
    networks:
      - default
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.${CADDY_NAME}.rule=Host(`${CADDY_HOST}`)"
      - "traefik.http.routers.${CADDY_NAME}.tls.certresolver=myresolver"
      - "traefik.http.routers.${CADDY_NAME}.entrypoints=web,websecure"
      - "traefik.http.routers.${CADDY_NAME}.middlewares=hardening@docker"

networks:
  traefik:
    external: true
